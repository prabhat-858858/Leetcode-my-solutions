//REVISE
class Solution {
    public static Boolean grid(int i,int j,int idx,char[][] board,String word){
        if(idx==word.length()){
            return true;
        }
        if(i<0||i>=board.length||j<0||j>=board[0].length||board[i][j]!=word.charAt(idx)){
            return false;
        }
       
        //sb.append(word.charAt(0));
     /*  if(board[i+1][j]==word.charAt(idx)){
           grid(i+1,j,idx+1,board,word);
        }else if(board[i][j+1]==word.charAt(idx)){
             grid(i,j+1,idx+1,board,word);
        }
      else if(board[i-1][j]==word.charAt(idx)){
        grid(i-1,j,idx+1,board,word);
      }
      else if(board[i][j-1]==word.charAt(idx)){
         grid(i,j-1,idx+1,board,word);
      }
        else{
            return false;
        }*/
   char temp=board[i][j];
    board[i][j]='*';
        Boolean result=  grid(i+1,j,idx+1,board,word)||    
            grid(i,j+1,idx+1,board,word)||
            grid(i-1,j,idx+1,board,word)||
            grid(i,j-1,idx+1,board,word);
        board[i][j]=temp;
        return result;
      // return false;
    }
    public boolean exist(char[][] board, String word) {
        int n=board.length;
        int m=board[0].length;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]==word.charAt(0)){
                   if(grid(i,j,0,board,word)){
                    return true;
                   }
                }
            }
        }
        return false;
    }
}
