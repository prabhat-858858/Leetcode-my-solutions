class Solution {
    public int minDistance(String word1, String word2) {
        if(word1.length()==0){
            return word2.length();
        }
        if(word2.length()==0){
            return word1.length();
        }
    int[][]dp=new int[word1.length()][word2.length()];
        return helper(word1,word2,word1.length()-1,word2.length()-1,dp);
    }
    public int helper(String w1,String w2,int i,int j,int[][]dp){
        if(j<0){
            return i+1;
        }
        if(i<0){
          return j+1;  
        }
        if(dp[i][j]!=0){
            return dp[i][j];
        }
        if(w1.charAt(i)==w2.charAt(j)){
            dp[i][j]= helper(w1,w2,i-1,j-1,dp);
        }else{
            int a=1+helper(w1,w2,i,j-1,dp);
            int b=1+helper(w1,w2,i-1,j,dp);
            int c=1+helper(w1,w2,i-1,j-1,dp);

            dp[i][j]= Math.min(Math.min(a,b),c);
        }
        return dp[i][j];
    }
}
